# Networking for Web Developers
## From Ping to HTTP
- "Ping" on käsk mis testib kas sinu arvuti suudab välja saata ja vastu võtta infot, sellelt IP-aadressilt mida sa pingid. Kõik informatsioon mis internetis liigub jagatakse packetiteks. 
- "Packet" on lühike sõnum ühelt arvutilt teisele mis sisaldab saatja ja vastu võtja IP-aadressi
- "Cloud" on vaheosa meie arvuti ja vastuvõtja vahel mida meie kontrollida ei saa ja ei tea ka mis seal sees on, aga vastutab selle eest et meie sõnum liiguks vastuvõtjani ja sealt tagasi meieni.
- "netcat" on tööriist millega saab manuaalselt suhelda internetiteenustega.
- "printf" on käsk millega saab printida formaaditud stringe.
- "pordid" tuvastavad erinevaid sessioone samal serveril. Tavaliselt saab ainult üks programm kuulata ühel pordil.
- Kõige suurem pordi number on 65535.
- "lsof" käskuga saab kontrollida mis programmid kuulavad või kasutavad internetiühendust.
- Veebilehed ja serverid peavad korraga vastuvõtma mitmeid päringuid mis tulevad sisse erinevatelt klintidelt erienvatel aegadel nii et süsteem kokku ei jookseks.
## Names and Addresses
IP-aadressid määravad ära mingi kindla võrgu või seadme internetis. Kõik info liigub läbi packetite. Iga packet sisaldab saatja ja vastuvõtja IP-d. PING saadab soovitud IP-aadressile packeteid ja annab selle kohta saatjale infot tagasi. DNS (Domani Name Sysem) tõlgib veebinime ümber vastavaks IP-aadressiks. Kui sinu DNS maha läheb, ei saa väga suur hulk inimesi ligipääsu su veebilehele. DNS vastutab ka osaliselt lehe turvalisuse eest. "Host" on lihtne käsk mis annab infot erinevate veebilehtede kohta, näiteks IP-aadressi. "Dig" käsk täidab sarnast eesmärki mida "Host" käsk, aga annab infot vormis mida on kergem scriptidel lugeda ja esitletakse viisil mis on sarnane sellega kuidas neid serverites hoiustatakse.
DNS-e on mitmeid erinevaid tüüpe, näiteks: A , CNAME, AAAA, NS, jne. Kuna DNS-idel on mitmeid root servereid, ei pea üks server teadma kõiki domeene, vaid need jaotatakse serverite vahel laiali. Kui inimene soovib avada mingid kindlat lehte, siis esimesena läheb see ligidal olevasse vahemälu serverisse kust ta uurib oma vahemälu, kui ta sealt vastet ei leia, siis saadetakse see päring edasi, suurematesse serveritesse kust tuleb vastus tagasi ning see salvestatakse vahemällu, et seda ei peaks iga kord uuesti otsima ning antakse info edasi kliendile. Juhul kui keegi liigutab oma domeeni ühelt IP-lt teisele võib see tekitada probleeme, kui keegi kasutab vahemälu kus aadress ei ole ära vahetunud juhatatakse ta vanale IP-le mida enam ei eksisteeri. Et seda vältida on DNS-serveritel TTL ehk "Time to live", kui see aeg saab läbi peavad vahemälu serverid uuesti suurtematest serveritest kontrollima veebilehe IP-d, et seda kliendile edastada. Veebiserverid teevad vahet erinevatel veebilehtedel nende domeeni nime järgi näiteks .com või .net. Mõned veebilehed kasutavad teise nimega veebi aadresse mis viivad tagasi algselele lehele, näiteks kui panna otsingusse www.github.com, viib see automaatselt päringu saatja github.com lehele. Domeene saab ka jagada alamdomeenideks näiteks www.example.com on example.com alamdomeen ning test.www.example.com on selle alamdomeen. Veebilehtedele võib ligipääseda nii IP-aadressi kui ka domeeninime kaudu, aga et seda mugavamaks teha kasutavad enamus veebilehti domeeninimesi. Iga seadme IP-aadress peab olema erinev. 
## Addressing and Networks
Tänane IP-protokoll mida enamasti kasutatakse on IPv4,  koosneb 32-bitist, aga et seda meile kergemaks teha kirjutame me seda tavaliselt 255.255.255.255 kujul. Kõik need aadressid ei ole kätte saadaval tavakasutajatele, vaid on reserveertiud erinevateks funktsioonideks. Tavakasutajatele on mõeldud 3,706,452,992 IPv4 aadressi. Kuna maailmas on ligikaudu 4 miljardit IPv4 võrku aga seadmeid millel on vaja IP-aadressi palju rohkem, ei ole neid enam piisavalt. Et seda leevendada kasutavad teenusepakkujad sellist asja nagu NAT mis tähendab, et nad annavad ühte majapidamisse ühe IPv4 aadressi mis jaotatakse selles võrgus olevate seadmete vahel. Ruuter saab avaliku võrgu ja ruuteriga ühendatud seadmed saavad privaatse võrgu, mida nad kasutavad ruuteriga suhtlemiseks kui on vaja väljastpoolt informatsiooni saada. Priivatsesse võrku ühendatud seadmed ilma ruuterita internetti ei pääse. Samas võrgus olevad seadmed kasutavad samu IP-võrgu eesliiteid. Samas võrgu blokis olevad seadmed saavad omavahel suhelda ilma ruuterita.
Kuna NAT on ajutine lahendus, on loodud ja implementeeritakse juba praegu IPv6. IPv6 on IPv4 järglane, ta erineb IPv4-ast sellega, et 32-biti asemel kasutab IPv6 128-bitti, tänu millele on IPv6 võrgus miljardeid kordi rohkem unikaalseid IP-aadresse kui IPv4-jas. Kuigi IPv4 on maailmas endiselt laialdasemalt kasutusel, suureneb IPv6 IP-de arv iga aastaga.
 Subnet aitab näidata võrgu suurust mis kasutab sarnaselt IPv4-le 32-bitist stringi, seda kasutatakse, et võrku erinevate organisatsioonide ja nende siseselt paremini jagada. Ruuter on seade mis seob oma vahel kahte erinevat IP-võrku ja käitub väravana nende vahel. Kui kaks seadet erinevates IP-võrkudes tahavad oma vahel informatsiooni saata, läheb see informatsioon esmalt läbi ruuteri. Samas IP-võrgus olevad seadmed saavad informatsiooni oma vahel saata lokaalselt. 
## Protocol Layers
Võrgu protokoll koosneb erinevatest tasemetest (HTTP, TCP, IP, Hardware), mis kõik suhtlevad omavahel. See protokoll toetab erinevaid interneti rakendusi. Arendajad töötavad tavaliselt ühel tasemel, aga tuleb teada kuidas need tasemed omavahel suhtlevad muidu võib tekkida probleeme nende omavahelises suhtlemises.
 
- "tcpdump" käsk töötab sarnaselt "ping" käsuga, aga annab natuke rohkem informatsiooni, selle kohta mida välja saadetakse ning vastu võetakse. Seda annab ka konfigureerida, et näha palju rohkem informatsiooni näiteks mis packeteid su seade kasutab, et suhelda veebiserveriga.
- Võrguprotokollide illustreerimiseks kasutatakse järjestusskeeme. Pakettid ei jõua kunagi kohale koheselt vaid alati tuleb arvestada latentsusega,
 
- Et kaks seadet saaksid üldse oma vahel suhelda peavad pooled oma vahel "koku leppima", et nende vahel on ühendus olemas, selleks saadab klient kellel on vastuvõtja info juba olemas, vastuvõtjale packeti mis sisaldab kliendi infot, IP-aadressi ja pordi numbrit. Lisaks sellele jälgib ta ka infot mis mõlemad pooled on välja saatnud ning kontrollib ka, et teine osapool on selle kätte saanud. Kui see ühendus on loodud saavad nad omavahel informatsiooni jagada.
- "Packet drop" tekib siis kui andme saatja saab aru, et vastuvõtja ei suuda antud kiirusel andmeid vastu võtta ja selleks, et kogu edastamine kokku ei jookseks aeglustab andme saatmist seniks kuni vastu võtja suudab uuesti kiiremini andmeid vastu võtta. See aga võib tekitada muid probleeme, kui saatjad näevad, et on tekkinud packet drop, siis nad võivad proovida uuesti seda sama packetit saata, aga kuna süsteem on endiselt üle koormatud võib see uuesti saadetud packet ka droppida ning võib jääda ringlema nii, et koormus ei vähenegi.
- TCP-l on sisseehitatud taimerid, kui serveriga millega ühendust üritatakse luua võtab liiga kaua aega, lõpetab TCP ühendamise proovi ning annab veateate.
- Võrgu probleeme ei saa vältida ning neid tuleb alati sisse, selleks, et see tööd ei mõjutaks tuleb lisada reserve mis saavad aidata tõrke korral.

## Big Networks
- "Ping" käsk ei näe kui kaua packeti saatmine võttis aega vastuvõtjani jõudmiseks, vaid näitab seda aega kui kaua see võttis sinnaminekuks ja tagasitulekuks.
- Et vältida lõpmatuid loope packetide saatmisel, on igal packetil "Time to live". Igakord kui packet läheb läbi ühe ruuteri see TTL väheneb ühe võrra ja kui peaks juhtuma, et see packet jääb kuskile ruuterite vahele ringlema väheneb TTL lõpuks nulli ja packet aegub. See aitab võrgus liiklust leevendada ja, et packetid mis kuskile ei liigu ei jooksutaks kogu võrgu kokku. Kui üks packet aegub, saadab ta veateate saatjale ja millises ruuteris see aegumine toimus.
 - Packetide liiklust erinevate ruuterite vahel Cloudis saab jälgida "traceroute" tööriistadega. Traceroute kasutab ära packetite TTL-i, et jälgida kust ruuteritest ta läbi käib, saates alates ühest TTL-ist packeteid ja saades tagasi veakoodi igast ruuterist kust ta läbi on käinud senikaua kuni ta jõuab sihtpunkti ning kasutab  neid veakoode, et luua teekonna mida packet kasutas, et sihtkohta jõuda.
-"Bandwidth" ja "latentsus" on kaks erinevat võrgu terminit mida inimesed kasutavad, et kirjeldada interneti kiirust. "Bandwidth" näitab maksimum andme mahtu mida on võimalik üle interneti kindlas ajavahemikus edasi anda, enamasti mõõdetakse seda megabitti sekundis (Mbps). "Latentsus" näitab seda kui kaua võtab aega ühe packeti saatmine ühelt seadmelt teisele. Väike bandwidth ja suur latentsus on kaks põhjust miks interneti liiklus võib tunduda aeglane.
-"Middlebox" , seade mis kontrollib, filtreerib või muudab võrgu liiklust, näiteks "Firewall"

